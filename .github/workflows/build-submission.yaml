name: Start Intake Process

on:
  push:
    branches: [ tpl-intake ]
    paths: [ tpl-*.toml ]

jobs:
  intake:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: /usr/share/miniconda
        key: conda-dist-v1
        restore-keys: |
          conda-dist-
    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: false
        python-version: 3.7
        conda-channels: anaconda, conda-forge
    - name: Install dependencies
      run: |
        conda config --set always_yes True
        conda install git-annex datalad osfclient hub
        pip install git+https://github.com/templateflow/python-manager.git@master
    - name: Pacify DataLad about git config
      run: |
        git config --global user.name "NiPreps Bot"
        git config --global user.email "nipreps@gmail.com"
    - name: Extract the new template ID and OSF project
      run: |
        HEAD_BRANCH=$( git log -m -1 --name-only | grep "Merge pull" | sed 's+^ *Merge pull request #[0-9]* from .*/pr/++g' )
        if [[ "$HEAD_BRANCH" == "" ]]; then
          echo "ERROR: could not parse the head branch of merge commit."
          exit 1
        fi
        echo "Starting intake of ${HEAD_BRANCH}"
        TEMPLATE_ID=${HEAD_BRANCH#*/}
        OSF_PROJECT=${HEAD_BRANCH%/*}

        # OSF_PROJECT=$( grep "project =" ${HEAD_BRANCH##*/} | sed 's/^project = //g' )

        echo ::set-env name=TEMPLATE_ID::"${TEMPLATE_ID}"
        echo ::set-env name=OSF_PROJECT::"${OSF_PROJECT}"
    - name: Fetch data of new template and sanitize
      run: |
        tfmgr get $TEMPLATE_ID
        tfmgr sanitize $TEMPLATE_ID
    - name:
      env:
        OSF_PASSWORD: ${{ secrets.OSF_PASSWORD }}
        OSF_USERNAME: ${{ secrets.OSF_USERNAME }}
      run: |
        tfmgr push $TEMPLATE_ID --osf-project ue5gx
        tfmgr geturls $TEMPLATE_ID --osf-project ue5gx

